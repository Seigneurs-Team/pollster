services:
  pollster:
    build:
      dockerfile: ./Dockerfile
    image: pollster:latest
    ports:
      - 127.0.0.1:8000:8000
    networks:
      back:
        ipv4_address: 172.16.235.5
      default:
    volumes:
      - ./:/pollster:./
    depends_on:
      mysql_db:
        condition: service_healthy
      rabbitmq_container:
        condition: service_healthy
    restart: unless-stopped

  dionysus:
    build:
      dockerfile: ./Dockerfile_Dionysus
    image: dionysus:latest
    networks:
      back:
        ipv4_address: 172.16.235.6
    volumes:
      - ./:/dionysus:./
    depends_on:
      mysql_db:
        condition: service_healthy
      rabbitmq_container:
        condition: service_healthy
    restart: unless-stopped


  log_system:
    build:
      dockerfile: ./Dockerfile_Log_System
    image: log_system:latest
    networks:
      back:
        ipv4_address: 172.16.235.7
    depends_on:
      rabbitmq_container:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./:/log:./

  rabbitmq_container:
    image: rabbitmq:latest
    networks:
      back:
        ipv4_address: 172.16.235.3
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      start_period: 40s
      interval: 10s
      timeout: 20s
      retries: 5
    restart: unless-stopped


  mysql_db:
    image: mysql:9.3.0
    networks:
      back:
        ipv4_address: 172.16.235.2
    environment:
      MYSQL_ROOT_PASSWORD: root1234567890
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      start_period: 30s
      interval: 10s
      timeout: 20s
      retries: 5
    command: [
      "mysqld",
      "--transaction-isolation=READ-COMMITTED"  # Пример изменения уровня изоляции
    ]
    restart: unless-stopped


networks:
  back:
    driver: bridge
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.16.235.0/24
  default:
    driver: bridge