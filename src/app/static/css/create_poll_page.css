:root {
    --border-radius: 12px;
    --violet: #5863BF;
}

h1 {
    text-align: center;
    padding-bottom: 20px;

}

.form {
    width: 444px;
    margin: auto;
    margin-bottom: 40px;

}

.form>* {
    margin: auto;
}

.chooseQuestionType {
    margin: auto;
}

.addPollImage {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 150px;
    margin: auto;
    border: var(--violet) dashed 4px;
    border-radius: var(--border-radius);
    color: #8D8D8D;
    font-size: 18px;
    font-weight: 700;
    text-align: center;
    width: calc(100% - 8px);

}

.addPollImage:hover,
.questionImage:hover {
    color: #fff;
    background-color: var(--violet);

}

.addPollImage input[type="file"],
.questionImage input[type="file"] {
    display: none;
    /* Скрытие оригинального input */
}

.form .form-label {
    font-weight: 500;
    color: #8D8D8D;
    display: block;
}

.form-label,
.form input:not(.value)[type="text"],
.form textarea {
    width: 100%;
}

.form input,
.form textarea,
.questionImage {
    border: none;
    background-color: inherit;
    outline: none;
}

.form input:hover,
.form textarea:hover {
    background-color: inherit;
    border: none;

}

.form button {
    border-radius: var(--border-radius);
}

.input-wrapper {
    background-color: #eaecf8;
    border-radius: var(--border-radius);
    padding: 2px 10px;

}

.input-wrapper:hover {
    background-color: #d1d3ed;
}


.questionImage {
    line-height: 28px;
}

.addQuestion,
.questionImage {
    border: var(--violet) dashed 1.5px;
}

.form>.input-wrapper,
.form>button,
.addPollImage,
.tags-wrapper,
.default-images {
    margin-bottom: 35px;

}

.options .input-wrapper,
.add-tag-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.options .input-wrapper {
    width: calc(100% - 40px);
}

.form .question {
    margin-bottom: 20px;

}

.form input,
.form button,
.questionImage {
    min-height: 30px;
}

.form textarea {
    min-height: 100px;
    resize: vertical;
}

.questionImage {
    display: inline-block;
    background: white;
    text-align: left;
    padding: 0 10px;
}


.question>* {
    margin-bottom: 10px;
}

button.deleteQuestion {
    border: red solid 1px;
    color: red;
}

button.deleteQuestion:hover {
    color: #FFF;
    background-color: red;
}

.questionId {
    font-size: 10px;
}


#submitPollBtn {
    border: var(--violet) solid 1px;
    padding: 0 10px;
    border-radius: var(--border-radius);
    min-height: 30px;
    margin: auto;
}

#submitPollBtn:hover {
    color: #fff;
}

.option * {
    min-height: auto;
    vertical-align: middle;
}

.option {
    display: flex;
    justify-content: space-between;
    margin-bottom: 5px;
    border: none;
}

.addOptionRadio {
    border: none;
    font-weight: 700;
    color: var(--violet);
    padding: 0;
}

.error-message {
    display: none;
}

.deleteQuestion,
.addQuestion,
.questionImage,
#submitPollBtn {
    width: 100%;
}

.option input[type="text"] {
    width: 100%;
}

.delOption {
    border: none;
    background: transparent;
}

.delOption:hover {
    background: transparent;

}

.tags,
.selected-tags,
.not-selected-tags {
    display: inline;
}

.tag {
    font-size: 14px;
    padding: 5px;
    margin: 2px;
    border: var(--violet) solid 1.5px;
}

.selected-tags>.tag {
    background: var(--violet);
    color: #FFF;
}

.form .addTag {
    min-height: 20px;
    height: 20px;

}

.addTag,
.addTag:hover {
    background: none;
}

.addTag img {
    width: 20px;
}

.addOptionCheckbox:hover,
.addOptionRadio:hover {
    background-color: unset;
}

.answerType:disabled {
    color: grey;
    border-color: grey;
}

.answerType:disabled:hover {
    background-color: white;
}

.answerType:disabled::after {
    content: "          (В разработке)";
}

input#private {
    min-height: auto;
    margin-bottom: 35px;
}

.overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.overlay-inner {
    background: white;
    padding: 20px;
    border-radius: var(--border-radius);
    color: black;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.overlay-content {
    display: flex;
    flex-direction: column;
    row-gap: 30px;
    align-items: center;
}

#overlay-loading img {
    width: 100px;
}

#overlay-loading .overlay-inner {
    background: transparent;
}

.poll-link {
    display: flex;
    justify-content: center;
    column-gap: 10px;
}

.poll-link input:disabled {
    background: #fff;
    border: none;
    min-width: 250px;
}

.copy-link,
.copy-link:hover {
    background: none;
    border: none;
}

.copy-link img {
    width: 24px;
}

.copied {
    display: none;
}

.go-home {
    border: var(--violet) solid 1.5px;
    border-radius: var(--border-radius);
    padding: 10px;
    width: fit-content;
}

.addPollImage.loaded span.load-img {
    display: none;

}

.addPollImage.loaded {
    height: auto;
    border: var(--violet) 4px solid;
    min-height: auto;
}

.addPollImage.loaded:hover {
    background-color: #FFF;
    color: var(--violet);

}

.addPollImage.loaded img {
    border-radius: var(--border-radius);
}

.default-images {
    display: flex;
    flex-direction: row;
    column-gap: 2px;
    flex-wrap: wrap;
    justify-content: space-between;
    margin-top: 5px;
}

.default-image input[type="radio"] {
    /* Add if not using autoprefixer */
    -webkit-appearance: none;
    appearance: none;
    /* For iOS < 15 to remove gradient background */
    background-color: #fff;
    /* Not removed via appearance */
    margin: 0;
    position: absolute;
    opacity: 0;
}

.default-image input[type="radio"]:checked+label {
    position: relative;
}

.default-image input[type="radio"]:checked+label::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* background-color: rgba(0, 0, 0, 0.5);  */
    outline: 3px var(--violet) solid;
    border-radius: var(--border-radius);
}

.default-image img {
    height: 65px;
    width: 100px;
    border-radius: var(--border-radius);
    display: block;
}